<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="java">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="java.classpath">
        <pathelement location="bin"/>
        <pathelement location="deps/ejml-0.20.jar"/>
        <pathelement location="deps/fig.jar"/>
        <pathelement location="deps/junit-4.10.jar" />
        <pathelement location="deps/hamecrest.jar" />
        <pathelement location="deps/javatuples-1.2.jar"/>
        <pathelement location="deps/javatuples-1.2-javadoc.jar"/>
        <pathelement location="deps/KittyCache-1.2.jar" />
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac includeantruntime="false" debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="java.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="MultiViewMixtureTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="learning.spectral.tests.MultiViewMixtureTests" todir="${junit.output.dir}"/>
            <classpath refid="java.classpath"/>
        </junit>
    </target>
    <target name="learning.spectral.tests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="learning.spectral.tests.MultiViewMixtureTests" todir="${junit.output.dir}"/>
            <classpath refid="java.classpath"/>
        </junit>
    </target>
    <target name="WordClustering">
        <java classname="learning.spectral.applications.WordClustering" failonerror="true" fork="yes">
            <jvmarg line="-XX:-UseSplitVerifier"/>
            <arg line="-k 10 -d 1000 -inputPath nyt-gen-1e6.txt -outputPath clusters"/>
            <classpath refid="java.classpath"/>
        </java>
    </target>
</project>
