#!/usr/bin/env python
# vim:ft=python

# Average over files specified in argument
# Assumes first 'n' (default=1) columns are keys

import sys
import numpy as np

def read_from_files(files):
    # Store for the files

    values = []
    for f in files:
        if f == "-":
            f = sys.stdin
        else:
            f = open( f )
        for line in f.xreadlines():
            values.append( np.array( map( float, line.split() ) ) )

    return np.array( values )

def plot_hist( values, bins = 10, out = None ):
    import matplotlib.pyplot as plt

    bins = np.linspace( 0, max( [ vs.max() for vs in values ] ), bins )

    plt.rc("font",size=20)

    for setting in [("EM",), ("EM","Spectral"), ("EM", "Spectral","Spectral+EM") ]:
        print setting
        plt.clf()
        plt.grid()
        plt.xlabel("Parameter Error")
        plt.ylim((0,200))

        colors = ["blue", "green", "red"]
        labels = ["Spectral+EM", "Spectral", "EM"]
        hatches = ["*", ".", "/"]

        if "Spectral+EM" in setting :
            plt.hist( values[0], bins=bins, label=labels[0], hatch=hatches[0], color=colors[0], alpha=0.9 )
        if "Spectral" in setting :
            plt.hist( values[1], bins=bins, label=labels[1], hatch=hatches[1], color=colors[1], alpha=0.9 )
        if "EM" in setting :
            plt.hist( values[2], bins=bins, label=labels[2], hatch=hatches[2], color=colors[2], alpha=0.9 )

        ##for (label, vs, hatch, color) in zip(labels[2:], values[2:], hatches[2:], colors[2:]):
        ##for (label, vs, hatch, color) in zip(labels[1:], values[1:], hatches[1:], colors[1:]):
        #for (label, vs, hatch, color) in zip(labels[:], values[:], hatches[:], colors[:]):
        #    plt.hist( vs, bins=bins, label=label, hatch=hatch, color=color, alpha=0.9 )
        plt.legend()
        plt.savefig( "-".join(setting + ("hist.pdf",)), transparent=True)
        plt.show()
        #plt.savefig( "hist-em.pdf" )
        #plt.savefig( "hist-spec.pdf" )
        #plt.savefig( "hist-spem.pdf" )
        #plt.show()
    #plt.savefig( "hist.pdf" )

def main(*args):
    if len(args) == 0 or args[0] == "-h":
        print "Usage avrg [-h] [-bins x] <list-of-files>" 
        sys.exit(1)

    if args[0] == "-bins" or args[0] == "-b" :
        bins = int( args[1] )
        files = args[2:]
    else:
        bins = 10
        files = args

    values = [ read_from_files( [f] ) for f in files ]
    plot_hist( values, bins )


if __name__ == "__main__":
    main(*sys.argv[1:])

